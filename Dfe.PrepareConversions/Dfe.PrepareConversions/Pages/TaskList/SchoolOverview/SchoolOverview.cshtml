@page "/task-list/{id:int}/school-overview"
@using Dfe.PrepareConversions.TagHelpers
@using Dfe.PrepareConversions.Data.Models
@model Dfe.PrepareConversions.Pages.UpdateAcademyConversionProjectPageModel
@{
   Model.SuccessPage = Links.TaskList.Index.Page;
    ViewData["Title"] = "Confirm school overview";
   ViewData["AcademyTypeAndRoute"] = Model.Project.AcademyTypeAndRoute;
}

@section BeforeMain
{
   <govuk-back-link link-item="@Links.TaskList.Index"/>
}

@if (Model.ShowError)
{
   <partial name="_ErrorSummary"/>
}

<div class="govuk-grid-row">
   <div class="govuk-grid-column-two-thirds">
      <span class="govuk-caption-l">@Model.Project.SchoolName</span>
      <h1 class="govuk-heading-l">
         School overview
      </h1>
        @if (ViewData["AcademyTypeAndRoute"] is AcademyTypeAndRoutes.Sponsored)
        {
           <div class="govuk-body">
              <p data-test="annex-b-help">Some details have been taken from TRAMS. You can add more from <a class="govuk-link" asp-page="@Links.AnnexB.Index.Page" asp-route-id="@Model.Project.Id">the Annex B form</a>.</p>
           </div>
        }
        else
        {
           <div class="govuk-body">
              This information comes from TRAMS and the
              <a class="govuk-link" asp-page="@Links.SchoolApplicationForm.Index.Page" asp-route-id="@Model.Project.Id" target="_blank">school's application form (opens in a new tab)</a>.
           </div>
           <br>
        }
         
   </div>
   <div class="govuk-grid-column-full">
      @await Component.InvokeAsync("SchoolOverview")
      <form method="post">
         <govuk-checkbox-input name="school-overview-complete" asp-for="Project.SchoolOverviewSectionComplete" label="Mark this section as complete, you can still make changes later"/>

         <button class="govuk-button" id="confirm-and-continue-button" data-module="govuk-button">
            Confirm and continue
         </button>
      </form>
   </div>
</div>