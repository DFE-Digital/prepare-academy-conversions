name: Cypress Tests using Cypress Docker Image

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      AZURE_ENDPOINT:
        required: true
      CYPRESS_TEST_SECRET:
        required: true
      CYPRESS_ACADEMISATION_API_URL:
        required: true
      CYPRESS_ACADEMISATION_API_KEY:
        required: true
      DB_CONNECTION_STRING:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        type: environment

concurrency:
  group: ${{ github.workflow }}

jobs:
  cypress-tests:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
         working-directory: ./Dfe.PrepareConversions/Dfe.PrepareConversions.CypressTests
    strategy:
      matrix:
        browser: ["edge"]
    container:
      image: cypress/browsers:22.13.1@sha256:914c9814a9567f32660203db7ecd610b8f8fede6e9103885728b3bd3f6dca4ff
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.ref }}

      - name: Run Cypress Tests (${{ inputs.environment }})
        if: inputs.environment == 'staging' || inputs.environment == 'dev'
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_db: ${{ secrets.DB_CONNECTION_STRING }}
          CYPRESS_url: ${{ secrets.AZURE_ENDPOINT }}
          CYPRESS_transfersUrl: ${{ secrets.AZURE_ENDPOINT }}transfers/home
          CYPRESS_cypressTestSecret: ${{ secrets.CYPRESS_TEST_SECRET }}
          CYPRESS_academisationApiUrl: ${{ secrets.CYPRESS_ACADEMISATION_API_URL }}
          CYPRESS_academisationApiKey: ${{ secrets.CYPRESS_ACADEMISATION_API_KEY }}
        with:
          browser: ${{ matrix.browser }}
          working-directory: ./Dfe.PrepareConversions/Dfe.PrepareConversions.CypressTests
          wait-on: ${{ secrets.AZURE_ENDPOINT }}
         

      - name: Upload screenshots (Cypress Tests)
        if: ${{ failure() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: screenshots-${{ inputs.environment }}-${{ matrix.browser }}
          path: Dfe.PrepareConversions/Dfe.PrepareConversions.CypressTests/cypress/screenshots

      - name: Combine reports
        if: always()
        run: |
          mkdir -p mochareports
          npm run combine:reports

      - name: Generate HTML report
        if: always()
        run: |
          npm run create:html:report

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: combined-reports-${{ inputs.environment }}-${{ matrix.browser }}
          path: Dfe.PrepareConversions/Dfe.PrepareConversions.CypressTests/mochareports/*.html

      - name: Report results to Teams
        if: always()
        run: |
          node <<EOF
          const axios = require('axios');
          const webhookUrl = process.env.TEAMS_WEBHOOK_URL;
          const message = {
            type: "message",
            attachments: [
              {
                contentType: "application/vnd.microsoft.card.adaptive",
                contentUrl: null,
                content: {
                  "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  type: "AdaptiveCard",
                  version: "1.2",
                  body: [
                    {
                      type: "Container",
                      style: process.env.GITHUB_JOB == 'success' ? "good" : "attention",
                      items: [
                        {
                          type: "TextBlock",
                          wrap: true,
                          text: process.env.GITHUB_JOB == 'success' ? "**Cypress Test Run Passed** ✅" : "**Cypress Test Run Failed** ❌",
                          size: "large",
                          horizontalAlignment: "center"
                        },
                        {
                          type: "TextBlock",
                          wrap: true,
                          text: "**Branch:** " + process.env.GITHUB_REF
                        },
                        {
                          type: "TextBlock",
                          wrap: true,
                          text: "**Workflow:** " + process.env.GITHUB_WORKFLOW
                        },
                        {
                          type: "TextBlock",
                          wrap: true,
                          text: "**Environment:** " + process.env.ENVIRONMENT
                        },
                        {
                          type: "TextBlock",
                          wrap: true,
                          text: "**See more information:** [" + process.env.INFORMATION_LINK + "](" + process.env.INFORMATION_LINK + ")"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
          axios.post(webhookUrl, message)
            .then(() => console.log("Message sent to Teams"))
            .catch(err => { console.error("Error sending to Teams", err); process.exit(1); });
          EOF
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
          ENVIRONMENT: ${{ inputs.environment }}
          INFORMATION_LINK: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
