name: Deploy to environment (CIP)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (staging, production)"
        required: true

env:
  DOCKER_IMAGE: a2bint-app
  NODE_VERSION: 18.x

jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          ENVIRONMENT=${{ github.event.inputs.environment }^^}

          if [ "$ENVIRONMENT" == "STAGING" ]; then
            ACR_CLIENTID=${{ secrets.TEST_AZURE_ACR_CLIENTID }}
            ACR_SECRET=${{ secrets.TEST_AZURE_ACR_SECRET }}
            ACR_URL=${{ secrets.TEST_ACR_URL }}
          elif [ "$ENVIRONMENT" == "PRODUCTION"]; then
            ACR_CLIENTID=${{ secrets.PRODUCTION_AZURE_ACR_CLIENTID }}
            ACR_SECRET=${{ secrets.PRODUCTION_AZURE_ACR_SECRET }}
            ACR_URL=${{ secrets.PRODUCTION_ACR_URL }}
          else
              echo "$ENVIRONMENT doesn't match any known options"
              exit 1
          fi

          echo "ACR_CLIENTID=$ACR_CLIENTID" >> $GITHUB_ENV
          echo "ACR_SECRET=$ACR_SECRET" >> $GITHUB_ENV
          echo "ACR_URL=$ACR_URL" >> $GITHUB_ENV

          GIT_REF=${{ github.ref }}
          GIT_BRANCH=${GIT_REF##*/}
          echo "BRANCH_TAG=$GIT_BRANCH" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_TAG=$GITHUB_SHA" >> $GITHUB_ENV

      - name: Azure Container Registry login
        uses: docker/login-action@v2
        with:
          username: ${{ env.ACR_CLIENTID }}
          password: ${{ env.ACR_SECRET }}
          registry: ${{ env.ACR_URL }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.gpaas-azure-migration
          tags: |
            ${{ env.ACR_URL }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG }}
            ${{ env.ACR_URL }}/${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_TAG }}
          push: true
          build-args: |
            COMMIT_SHA=${{ env.DOCKER_IMAGE_TAG }}

  deploy-image:
    needs: build-and-push-image
    runs-on: ubuntu-22.04
    steps:
      - name: Set environment variables
        run: |
          ENVIRONMENT=${{ github.event.inputs.environment }^^}

          if [ "$ENVIRONMENT" == "STAGING" ]; then
            ACA_CREDENTIALS=${{ secrets.TEST_AZURE_ACA_CREDENTIALS }}
            ACA_CONTAINERAPP_NAME=${{ secrets.TEST_ACA_CONTAINERAPP_NAME }}
            ACA_RESOURCE_GROUP=${{ secrets.TEST_ACA_RESOURCE_GROUP }}
            ACR_URL=${{ secrets.TEST_ACR_URL }}
          elif [ "$ENVIRONMENT" == "PRODUCTION"]; then
            ACA_CREDENTIALS=${{ secrets.PRODUCTION_AZURE_ACA_CREDENTIALS }}
            ACA_CONTAINERAPP_NAME=${{ secrets.PRODUCTION_ACA_CONTAINERAPP_NAME }}
            ACA_RESOURCE_GROUP=${{ secrets.PRODUCTION_ACA_RESOURCE_GROUP }}
            ACR_URL=${{ secrets.PRODUCTION_ACR_URL }}
          else
              echo "$ENVIRONMENT doesn't match any known options"
              exit 1
          fi

          echo "ACA_CREDENTIALS=$ACA_CREDENTIALS" >> $GITHUB_ENV
          echo "ACA_CONTAINERAPP_NAME=$ACA_CONTAINERAPP_NAME" >> $GITHUB_ENV
          echo "ACA_RESOURCE_GROUP=$ACA_RESOURCE_GROUP" >> $GITHUB_ENV

      - name: Azure login with ACA credentials
        uses: azure/login@v1
        with:
          creds: ${{ env.ACA_CREDENTIALS }}

      - name: Update Azure Container Apps Revision
        uses: azure/CLI@v1
        with:
          azcliversion: 2.40.0
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update \
              --name ${{ env.ACA_CONTAINERAPP_NAME }} \
              --resource-group ${{ env.ACA_RESOURCE_GROUP }} \
              --image ${{ env.ACR_URL }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG }} \
              --output none

  cypress-tests:
    needs: deploy-image
    environment: staging
    if: ${{ github.event.inputs.environment }} == staging
    runs-on: ubuntu-22.04
    defaults:
      run:
         working-directory: ApplyToBecomeInternal/ApplyToBecomeCypressTests
    steps:
      - uses: actions/checkout@v2
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Npm install
        run: npm install
      - name: Run cypress
        run: npm run cy:run -- --env url='${{ secrets.ENDPOINT }}',authorizationHeader='${{ secrets.CYPRESS_TEST_SECRET }}'
        env:
          db: ${{ secrets.DB_CONNECTION_STRING }}
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
         name: screenshots
         path: ApplyToBecomeInternal/ApplyToBecomeCypressTests/cypress/screenshots

  summary:
    needs: cypress-tests
    runs-on: ubuntu-22.04
    steps:
      name: Output
      run: |
        ENVIRONMENT=${{ github.event.inputs.environment }^^}
        echo "Deploying: `$GITHUB_SHA` to `$ENVIRONMENT`" >> $GITHUB_STEP_SUMMARY
        echo "Status: `${{ jobs.deploy-image.result }}`" >> $GITHUB_STEP_SUMMARY