name: Deploy to environment (CIP)

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: "Choose an environment to deploy to"
        required: true

env:
  DOCKER_IMAGE: a2bint-app
  NODE_VERSION: 18.x

jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set environment variables
        run: |
          GIT_REF=${{ github.ref }}
          GIT_BRANCH=${GIT_REF##*/}
          echo "BRANCH_TAG=$GIT_BRANCH" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_TAG=$GITHUB_SHA" >> $GITHUB_ENV

      - name: Azure Container Registry login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CIP_ACR_CLIENTID }}
          password: ${{ secrets.CIP_ACR_SECRET }}
          registry: ${{ secrets.CIP_ACR_URL }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.gpaas-azure-migration
          tags: |
            ${{ secrets.CIP_ACR_URL }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG }}
            ${{ secrets.CIP_ACR_URL }}/${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_TAG }}
          push: true
          build-args: |
            COMMIT_SHA=${{ env.DOCKER_IMAGE_TAG }}

  # deploy-image:
  #   needs: build-and-push-image
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Azure login with ACA credentials
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.CIP_ACA_CREDENTIALS }}

  #     - name: Update Azure Container Apps Revision
  #       uses: azure/CLI@v1
  #       with:
  #         azcliversion: 2.40.0
  #         inlineScript: |
  #           az config set extension.use_dynamic_install=yes_without_prompt
  #           az containerapp update \
  #             --name ${{ secrets.CIP_ACA_CONTAINERAPP_NAME }} \
  #             --resource-group ${{ secrets.CIP_ACA_RESOURCE_GROUP }} \
  #             --image ${{ secrets.CIP_ACR_URL }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG }} \
  #             --output none

  # cypress-tests:
  #   needs: deploy-image
  #   environment: staging
  #   if: ${{ github.event.inputs.environment }} == staging
  #   runs-on: ubuntu-22.04
  #   defaults:
  #     run:
  #        working-directory: ApplyToBecomeInternal/ApplyToBecomeCypressTests
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}

  #     - name: Npm install
  #       run: npm install

  #     - name: Run cypress
  #       run: npm run cy:run -- --env url='${{ secrets.ENDPOINT }}',authorizationHeader='${{ secrets.CYPRESS_TEST_SECRET }}'
  #       env:
  #         db: ${{ secrets.DB_CONNECTION_STRING }}

  #     - uses: actions/upload-artifact@v1
  #       if: failure()
  #       with:
  #        name: screenshots
  #        path: ApplyToBecomeInternal/ApplyToBecomeCypressTests/cypress/screenshots

  # summary:
  #   needs: deploy-image
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Output
  #       run: |
  #         ENVIRONMENT=${{ github.event.inputs.environment }}
  #         echo "Deploying: `$GITHUB_SHA` to `$ENVIRONMENT`" >> $GITHUB_STEP_SUMMARY
  #         echo "Status: `${{ job.deploy-image.result }}`" >> $GITHUB_STEP_SUMMARY