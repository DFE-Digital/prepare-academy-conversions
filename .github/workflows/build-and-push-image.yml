name: Deploy to environment (CIP)

on:
  push:
    branches:
      - main
      - workflows
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: "Choose an environment to deploy to"
        required: true

env:
  DOCKER_IMAGE: a2bint-app
  NODE_VERSION: 18.x

jobs:
  set-env:
    name: Determine environment
    runs-on: ubuntu-22.04
    outputs:
      environment: ${{ steps.var.outputs.environment }}
    steps:
      - id: var
        run: |
          GIT_REF=${{ github.ref }}
          GIT_BRANCH=${GIT_REF##*/}
          INPUT=${{ github.event.inputs.environment }}
          ENVIRONMENT=${INPUT:-"dev"}
          echo "environment=${INPUT:-"dev"}" >> $GITHUB_OUTPUT
          echo "ENVIRONMENT=${ENVIRONMENT,,}" >> $GITHUB_ENV
          echo "BRANCH_TAG=$GIT_BRANCH" >> $GITHUB_ENV
          echo "RELEASE_TAG=$ENVIRONMENT-`date +%Y-%m-%d`.${{ github.run_number }}" >> $GITHUB_ENV

  build-and-push-image:
    needs: set-env
    runs-on: ubuntu-22.04
    environment: ${{ needs.set-env.outputs.environment }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Azure Container Registry login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CIP_ACR_CLIENTID }}
          password: ${{ secrets.CIP_ACR_SECRET }}
          registry: ${{ secrets.CIP_ACR_URL }}

      - name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.gpaas-azure-migration
          tags: |
            ${{ secrets.CIP_ACR_URL }}/${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_TAG }}
            ${{ secrets.CIP_ACR_URL }}/${{ env.DOCKER_IMAGE }}:${{ env.RELEASE_TAG }}
            ${{ secrets.CIP_ACR_URL }}/${{ env.DOCKER_IMAGE }}:latest
          push: true

  create-tag:
    needs: set-env
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Create tag
        run: |
          git tag ${{ env.RELEASE_TAG }}
          git push origin ${{ env.RELEASE_TAG }}

      - name: Create release
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: ${{ needs.set-env.outputs.environment == 'staging' }},
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: ${{ needs.set-env.outputs.environment == 'staging' }},
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
            } catch (error) {
              core.setFailed(error.message);
            }

  deploy-image:
    needs: [ build-and-push-image, set-env ]
    runs-on: ubuntu-22.04
    environment: ${{ needs.set-env.outputs.environment }}
    steps:
      - name: Azure login with ACA credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.CIP_ACA_CREDENTIALS }}

      - name: Update Azure Container Apps Revision
        uses: azure/CLI@v1
        with:
          azcliversion: 2.40.0
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update \
              --name ${{ secrets.CIP_ACA_CONTAINERAPP_NAME }} \
              --resource-group ${{ secrets.CIP_ACA_RESOURCE_GROUP }} \
              --image ${{ secrets.CIP_ACR_URL }}/${{ env.DOCKER_IMAGE }}:${{ env.RELEASE_TAG }} \
              --output none

  summary:
    needs: [ set-env ]
    runs-on: ubuntu-22.04
    steps:
      - name: Output
        run: |
          echo "Deploying: `${{ env.RELEASE_TAG }}` to `${{ needs.set-env.outputs.environment }}`" >> $GITHUB_STEP_SUMMARY
          echo "Status: `${{ job.deploy-image.result }}`" >> $GITHUB_STEP_SUMMARY
